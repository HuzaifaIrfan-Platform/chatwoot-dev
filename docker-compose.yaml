services:
  base: &base
    container_name: chatwoot-base
    image: chatwoot/chatwoot:latest
    env_file: .env ## Change this file for customized env variables
    volumes:
      - chatwoot-data:/app/storage
    extra_hosts:
      - "host.docker.internal:host-gateway"
  rails:
    <<: *base
    container_name: chatwoot-rails
    depends_on:
      - postgres
      - redis
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    restart: always

    networks:
      - chatwoot-dev
      - web

  sidekiq:
    <<: *base
    container_name: chatwoot-sidekiq
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    restart: always
    networks:
      - chatwoot-dev
  postgres:
    container_name: chatwoot-postgres
    image: pgvector/pgvector:pg16
    restart: always
    # ports:
    #   - '127.0.0.1:5432:5432'
    volumes:
      - chatwoot-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=aa
    networks:
      - chatwoot-dev

  redis:
    container_name: chatwoot-redis
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - chatwoot-redis:/data
    # ports:
    #   - '127.0.0.1:6379:6379'
    networks:
      - chatwoot-dev
      
networks:
  chatwoot-dev:
  web:
    external: true

volumes:
  chatwoot-data:
  chatwoot-postgres:
  chatwoot-redis:

